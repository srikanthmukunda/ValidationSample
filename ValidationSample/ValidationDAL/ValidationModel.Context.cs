//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ValidationDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ValidationDBContext : DbContext
    {
        public ValidationDBContext()
            : base("name=ValidationDBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<PipelineStage> PipelineStages { get; set; }
        public virtual DbSet<TestCase> TestCases { get; set; }
        public virtual DbSet<TestCaseType> TestCaseTypes { get; set; }
        public virtual DbSet<TestSuite> TestSuites { get; set; }
        public virtual DbSet<TestCaseLog> TestCaseLogs { get; set; }
        public virtual DbSet<TestInstance> TestInstances { get; set; }
    
        public virtual ObjectResult<Nullable<System.Guid>> SqlQueryNotificationStoredProcedure_c22738e7_279b_4ae9_9662_27994681aa1b()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("SqlQueryNotificationStoredProcedure_c22738e7_279b_4ae9_9662_27994681aa1b");
        }
    
        public virtual int usp_AddTestCase(Nullable<int> testSuiteId, Nullable<int> pipeLineStageId, Nullable<int> testCaseTypeId, string testCaseName, string description, Nullable<bool> isActive, Nullable<bool> isObsolete, string obsoleteReason, Nullable<System.DateTime> createdDate, string createdBy)
        {
            var testSuiteIdParameter = testSuiteId.HasValue ?
                new ObjectParameter("TestSuiteId", testSuiteId) :
                new ObjectParameter("TestSuiteId", typeof(int));
    
            var pipeLineStageIdParameter = pipeLineStageId.HasValue ?
                new ObjectParameter("PipeLineStageId", pipeLineStageId) :
                new ObjectParameter("PipeLineStageId", typeof(int));
    
            var testCaseTypeIdParameter = testCaseTypeId.HasValue ?
                new ObjectParameter("TestCaseTypeId", testCaseTypeId) :
                new ObjectParameter("TestCaseTypeId", typeof(int));
    
            var testCaseNameParameter = testCaseName != null ?
                new ObjectParameter("TestCaseName", testCaseName) :
                new ObjectParameter("TestCaseName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isObsoleteParameter = isObsolete.HasValue ?
                new ObjectParameter("IsObsolete", isObsolete) :
                new ObjectParameter("IsObsolete", typeof(bool));
    
            var obsoleteReasonParameter = obsoleteReason != null ?
                new ObjectParameter("ObsoleteReason", obsoleteReason) :
                new ObjectParameter("ObsoleteReason", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddTestCase", testSuiteIdParameter, pipeLineStageIdParameter, testCaseTypeIdParameter, testCaseNameParameter, descriptionParameter, isActiveParameter, isObsoleteParameter, obsoleteReasonParameter, createdDateParameter, createdByParameter);
        }
    
        public virtual int usp_RegisterUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegisterUser", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spGetTestcaseLogs_Result> spGetTestcaseLogs(Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTestcaseLogs_Result>("spGetTestcaseLogs", pageNumberParameter, pageSizeParameter);
        }
    }
}
